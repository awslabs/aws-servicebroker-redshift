- name: include plan vars
  include_vars:
    file: "{{ _apb_plan_id }}.yml"
- name: generate b62 hash
  shell: "16to62 {{ params_hash }}"
  register: command_output
- name: set fact
  set_fact:
    stack_suffix: "{{ command_output.stdout }}"
- name: generate cidrs
  block:
  - name: generate cidrs
    shell: "getcidrs {{ CidrSize }} {{ NumberOfAvailabilityZones }} {{ VpcId }} {{ region }}"
    register: command_output
  - name: set fact
    set_fact:
      CidrBlocks: "{{ command_output.stdout }}"
  when: CidrBlocks == "auto"
- name: generate azs
  block:
  - name: generate azs
    shell: "getazs {{ NumberOfAvailabilityZones }} {{ region }}"
    register: command_output
  - name: set fact
    set_fact:
      AvailabilityZones: "{{ command_output.stdout }}"
  when: AvailabilityZones == "auto"
- name: Launch Redshift
  cloudformation:
   stack_name: "apb-redshift-{{ stack_suffix }}"
   state: "present"
   region: "{{ region }}"
   disable_rollback: false
   template: "{{ role_path }}/files/RedShiftCluster.yml"
   role_arn: "{{ aws_cloudformation_role_arn }}"
   template_parameters:
     ApplicationName: "{{ application_name }}"
     VpcId: "{{ VpcId }}"
     NumberOfAvailabilityZones: "{{ NumberOfAvailabilityZones | string }}"
     PreferredMaintenanceWindowDay: "{{ PreferredMaintenanceWindowDay }}"
     PreferredMaintenanceWindowStartTime: "{{ PreferredMaintenanceWindowStartTime }}"
     PreferredMaintenanceWindowEndTime: "{{ PreferredMaintenanceWindowEndTime }}"
     AvailabilityZones: "{{ AvailabilityZones }}"
     CidrBlocks: "{{ CidrBlocks }}"
     AccessCidr: "{{ AccessCidr }}"
     MasterUsername: "{{ MasterUsername }}"
     MasterUserPassword: "{{ MasterUserPassword }}"
     StorageEncrypted: "{{ StorageEncrypted | string }}"
     BackupRetentionPeriod: "{{ BackupRetentionPeriod | string }}"
     PortNumber: "{{ PortNumber | string }}"
     PubliclyAccessible: "{{ PubliclyAccessible | string }}"
     DBName: "{{ DBName }}"
     NodeType: "{{ NodeType }}"
     NumberOfNodes: "{{ NumberOfNodes }}"
     ClusterType: "{{ ClusterType }}"
     UseElasticIP: "{{ UseElasticIP | string }}"
     LogBucketName: "{{ LogBucketName }}"
     AllowVersionUpgrade: "{{ AllowVersionUpgrade | string }}"
   tags:
     ServiceBrokerId: "{{ application_name }}"
  register: redshift
- name: Check for CloudFormation error logs
  debug:
    var: redshift.log
- name: Encode bind credentials
  asb_encode_binding:
    fields:
      REDSHIFT_ENDPOINT: "{{ redshift.stack_outputs.EndpointAddress }}"
      REDSHIFT_PORT: "{{ PortNumber | string }}"
      REDSHIFT_USERNAME: "{{ MasterUsername }}"
      REDSHIFT_PASSWORD: "{{ MasterUserPassword }}"
      REDSHIFT_DB_NAME: "{{ DBName }}"
  when: redshift.log | length < 1